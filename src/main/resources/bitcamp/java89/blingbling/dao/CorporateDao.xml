<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bitcamp.java89.blingbling.dao.CorporateDao">

  <resultMap type="corporate" id="corporate-map">
    <id     column="msno"     property="memberNo"/>
    <result column="name"     property="name"/>
    <result column="email"    property="email"/>
    <result column="tel"      property="tel"/>
    <result column="chck"     property="confirmTel"/>
    <result column="mgr"      property="administrator"/>
    <result column="crno"     property="corporateRegistrationNumber"/>
    <result column="cachk"    property="corporateConfirm"/>
    <result column="cname"    property="corporateName"/>
    <result column="ctype"    property="corporateType"/>

    <result column="pst_no"   property="postNumber"/>
    <result column="bas_adr"  property="baseAddress"/>
    <result column="det_adr"  property="detailAddress"/>
    <result column="map_loc"  property="mapLocation"/>
    <result column="detail"   property="detail"/>
    <result column="minfo"    property="additionalInfo"/>
    <result column="pr_ti"    property="priceTime"/>
    <result column="notice"   property="notice"/>
    
    <collection property="telList" ofType="corpTel">
      <id     column="mtno"   property="no"/>
      <result column="mstel"  property="corporateTel"/>
    </collection>

    <collection property="photoList" ofType="photo">
      <id     column="mpno"   property="no"/>
      <result column="path" property="filePath"/>
    </collection>
    
    <collection property="itemList" ofType="item">
      <id     column="ino"   property="itemNo"/>
      <result column="iname" property="name"/>
      <result column="price" property="price"/>
      <result column="utime" property="usingTime"/>
    </collection>

  </resultMap>
  
  <select id="getListByMemberNo" parameterType="int" resultMap="corporate-map">
   select
      f.mno,
      f.msno,
      m.name, 
      ms.cname,
      mp.mpno,
      mp.path,
      it.ino,
      it.name as iname,
      it.price
    from  favor f
      join memb_store ms 
        using(msno)
      join ms_phot mp
        using(msno)
      join item it 
        using(msno)
      join memb m 
        using(mno)
    where f.mno=#{value}
  </select>
  
  
  <select id="getConversionList" resultMap="corporate-map">
    select
      memb.mno,
      memb.name,
      memb_store.cname,
      memb_store.ctype
    from memb_store
      join memb on memb.mno=memb_store.msno
    where
    cachk='0';
  </select>
  
  <select id="count" parameterType="string" resultType="int">
    select count(*)
    from memb_store ms
      left outer join memb m on ms.msno=m.mno
    where email=#{value}
  </select>
  
  <select id="countByNo" parameterType="int" resultType="int">
    select count(*)
    from memb_store ms
      left outer join memb m on ms.msno=m.mno
    where ms.msno=#{value}
  </select>
  
  <select id="getList" resultMap="corporate-map">
    select
      ms.msno,
      m.name, 
      m.email, 
      m.tel, 
      m.chck, 
      m.mgr,
      ms.crno,
      ms.cachk,
      ms.cname,
      ms.ctype,
      ms.pst_no,
      ms.bas_adr,
      ms.det_adr,
      ms.map_loc,
      ms.detail,
      ms.minfo,
      ms.notice,
      ms.pr_ti
    from memb_store ms
      left outer join memb m on ms.msno=m.mno
  </select>
  
  <select id="getListByCorporateName" parameterType="String" resultMap="corporate-map">
    select
      ms.msno,
      m.name, 
      m.email, 
      m.tel, 
      m.chck, 
      m.mgr,
      ms.crno,
      ms.cachk,
      ms.cname,
      ms.ctype,
      ms.pst_no,
      ms.bas_adr,
      ms.det_adr,
      ms.map_loc,
      ms.detail,
      ms.minfo,
      ms.notice,
      ms.pr_ti
    from memb_store ms
      left outer join memb m on ms.msno=m.mno
    where ms.cname like concat('%',#{value}%,'%')
  </select>
  
  <select id="getListBysearchbar" parameterType="map" resultMap="corporate-map">
    select
      ms.msno,
      m.name, 
      m.email, 
      m.tel, 
      m.chck, 
      m.mgr,
      ms.crno,
      ms.cachk,
      ms.cname,
      ms.ctype,
      ms.pst_no,
      ms.bas_adr,
      ms.det_adr,
      ms.map_loc,
      ms.detail,
      ms.minfo,
      ms.notice,
      ms.pr_ti,
      mp.mpno,
      mp.path,
      it.ino,
      it.name as iname,
      it.price,
      it.utime
    from  memb m
      inner join memb_store ms on ms.msno=m.mno
      left outer join ms_phot mp on mp.msno=m.mno
      left outer join item it on it.msno=mp.msno
      where 
      <foreach collection = "searchbar" item="value" open="(" close=")" separator="or">
      	ms.bas_adr like concat('%',#{value},'%') or
      	ms.cname like concat('%',#{value},'%') or
      	it.name like concat('%',#{value},'%')
      </foreach>
       
  </select>
  
   <select id="getListBysearchheader" parameterType="map" resultMap="corporate-map">
    select
      ms.msno,
      m.name, 
      m.email, 
      m.tel, 
      m.chck, 
      m.mgr,
      ms.crno,
      ms.cachk,
      ms.cname,
      ms.ctype,
      ms.pst_no,
      ms.bas_adr,
      ms.det_adr,
      ms.map_loc,
      ms.detail,
      ms.minfo,
      ms.notice,
      ms.pr_ti,
      mp.mpno,
      mp.path,
      it.ino,
      it.name as iname,
      it.price,
      it.utime
    from  memb m
      inner join memb_store ms on ms.msno=m.mno
      left outer join ms_phot mp on mp.msno=m.mno
      left outer join item it on it.msno=mp.msno
      where ms.bas_adr like concat('%',#{address1},'%') and
      <foreach collection = "address2" item="value" open="(" close=")"  separator="or">
      	ms.cname like concat('%',#{value},'%') or
      	ms.ctype like concat('%',#{value},'%') or
      	it.name like concat('%',#{value},'%')
      </foreach>
       
  </select>
  
  <select id="getOneWithTel" parameterType="int" resultMap="corporate-map">
    select
      ms.msno,
      m.name, 
      m.email, 
      m.tel, 
      m.chck, 
      m.mgr,
      ms.crno,
      ms.cachk,
      ms.cname,
      ms.ctype,
      ms.pst_no,
      ms.bas_adr,
      ms.det_adr,
      ms.map_loc,
      ms.detail,
      ms.minfo,
      ms.notice,
      ms.pr_ti,
      mt.mtno,
      mt.mstel
    from  memb m
      inner join memb_store ms on ms.msno=m.mno
      left outer join ms_tel mt on mt.msno=m.mno
    where m.mno=#{value}
  </select>
  <select id="getListBybaseAddress" parameterType="map" resultMap="corporate-map">
    select
      ms.msno,
      m.name, 
      m.email, 
      m.tel, 
      m.chck, 
      m.mgr,
      ms.crno,
      ms.cachk,
      ms.cname,
      ms.ctype,
      ms.pst_no,
      ms.bas_adr,
      ms.det_adr,
      ms.map_loc,
      ms.detail,
      ms.minfo,
      ms.notice,
      ms.pr_ti,
      mp.mpno,
      mp.path,
      it.ino,
      it.name as iname,
      it.price,
      it.utime
    from  memb m
      inner join memb_store ms on ms.msno=m.mno
      left outer join ms_phot mp on mp.msno=m.mno
      left outer join item it on it.msno=mp.msno
      where ms.bas_adr like concat('%',#{addr1},'%') and 
      <foreach collection = "addr2" item="value" open="(" close=")" separator="or">
      	ms.bas_adr like concat('%',#{value},'%')
      </foreach>
       
  </select>
  
  <select id="getOneByEmail" parameterType="string" resultMap="corporate-map">
    select
      ms.msno,
      m.name, 
      m.email, 
      m.tel, 
      m.chck, 
      m.mgr,
      ms.crno,
      ms.cachk,
      ms.cname,
      ms.ctype,
      ms.pst_no,
      ms.bas_adr,
      ms.det_adr,
      ms.map_loc,
      ms.detail,
      ms.minfo,
      ms.notice,
      ms.pr_ti
    from memb_store ms
      left outer join memb m on ms.msno=m.mno
    where m.email=#{value}
  </select>

  <insert id="insert" parameterType="corporate">
    insert into memb_store(msno, crno, cachk, cname, ctype, 
      pst_no, bas_adr, det_adr, map_loc, detail, minfo, notice)
    values(
      #{memberNo},
      #{corporateRegistrationNumber},
      #{corporateConfirm},
      #{corporateName},
      #{corporateType},
      #{postNumber},
      #{baseAddress},
      #{detailAddress},
      #{mapLocation},
      #{detail},
      #{additionalInfo},
      #{notice})
  </insert>
  
  <insert id="insertTel" parameterType="corporate">
    insert into ms_tel(msno,mstel) 
    values
    <foreach collection="telList" item="corpTel" separator=",">
      (#{memberNo}, #{corpTel.corporateTel})
    </foreach>
  </insert> 
  
  <insert id="insertPhoto" parameterType="corporate">
    insert into ms_phot(mpno,path) 
    values
    <foreach collection="photoList" item="photo" separator=",">
      (#{memberNo}, #{photo.filepath})
    </foreach>
  </insert> 
  
  <update id="update" parameterType="corporate">
    update memb_store ms set
      ms.msno=#{memberNo},
      ms.crno=#{corporateRegistrationNumber},
      ms.cachk=#{corporateConfirm},
      ms.cname=#{corporateName},
      ms.ctype=#{corporateType},
      ms.pst_no=#{postNumber},
      ms.bas_adr=#{baseAddress},
      ms.det_adr=#{detailAddress},
      ms.map_loc=#{mapLocation},
      ms.detail=#{detail},
      ms.minfo=#{additionalInfo},
      ms.notice=#{notice}
    where msno=#{memberNo}
  </update>
  
  <update id="updateDetail" parameterType="corporate">
    update memb_store ms set
      ms.msno=#{memberNo},
      ms.detail=#{detail}
    where msno=#{memberNo}
  </update>
  
  <update id="updateNotice" parameterType="corporate">
    update memb_store ms set
      ms.msno=#{memberNo},
      ms.notice=#{notice}
    where msno=#{memberNo}
  </update>
  
  <update id="updatePriceTime" parameterType="corporate">
    update memb_store ms set
      ms.msno=#{memberNo},
      ms.pr_ti=#{priceTime}
    where msno=#{memberNo}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from memb_store where msno=#{value}
  </delete>
  
  <delete id="deleteTel" parameterType="int">
    delete from ms_tel where msno=#{value}
  </delete>
</mapper>








